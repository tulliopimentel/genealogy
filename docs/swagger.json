{
    "swagger": "2.0",
    "info": {
        "description": "This is the documentation of the Genealogy API",
        "title": "Genealogy API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "url": "https://www.linkedin.com/in/tulliopimentelbarbosa/"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:5050",
    "paths": {
        "/v1/person": {
            "get": {
                "description": "Get all persons of the database, even if is not related to each other",
                "tags": [
                    "Show all persons"
                ],
                "summary": "Get all persons of the database",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Person"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "description": "Insert a new person into the database, and you can create a new family tree with this person. You can also update some person, you just have to input the ID following by the name you want to update. If you wanna just insert a new name, no needs of insert an ID",
                "tags": [
                    "Create person"
                ],
                "summary": "CreatePerson() Create a new person",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Person"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "description": "will delete a person of the database",
                "tags": [
                    "Delete a Person"
                ],
                "summary": "DeletePerson() will delete a person in database",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Person"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/person/family": {
            "post": {
                "description": "In this endpoint you can create a family, that is, put the ID of the reference person, another person and the relationship between the two in the database. All by ID. You can also update a family row if you put and ID that already exists.",
                "tags": [
                    "Create a new family"
                ],
                "summary": "Creates the relationship between two people to create a family and family tree",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Family"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "description": "In this endpoint you can delete a family",
                "tags": [
                    "Delete a family"
                ],
                "summary": "delete a row from the 'families' table from the family ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Family"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/person/genealogy/{id}": {
            "get": {
                "description": "This endpoint will go deep, will get all the persons of the family tree. That means will get all persons related to each other",
                "tags": [
                    "Show the entire Genealogy"
                ],
                "summary": "Get the entire genealogy of the family of the referenced person",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Genealogy"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "description": "This table has just two columns in database, that means you will just put the ID of the referenced person in the table family. You can also update a genealogy row if you put and ID that already exists.",
                "tags": [
                    "Create a new Genealogy"
                ],
                "summary": "Create a new reference (person ID) for a new Genealogy, which is relate to the table 'family'",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Genealogy"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/person/{id}": {
            "get": {
                "description": "Returns the closest family members to the reference person, without delving into the family tree of the other members",
                "tags": [
                    "Show Family Tree"
                ],
                "summary": "ShowFamily() Returns the closest family members to the reference person",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Genealogy"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Family": {
            "type": "object",
            "properties": {
                "family": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Family"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "person": {
                    "$ref": "#/definitions/models.Person"
                },
                "personFamily": {
                    "$ref": "#/definitions/models.Person"
                },
                "personID": {
                    "type": "integer"
                },
                "relationship": {
                    "$ref": "#/definitions/models.Relationship"
                }
            }
        },
        "models.Genealogy": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "person": {
                    "$ref": "#/definitions/models.Person"
                },
                "personFamily": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Family"
                    }
                },
                "personID": {
                    "type": "integer"
                }
            }
        },
        "models.Person": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Relationship": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}